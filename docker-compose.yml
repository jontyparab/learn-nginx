version: "3.9"
services:
  ng0:
    image: nginx:latest
    container_name: ng0
    hostname: ng0
    ports:
      - 8888:8888
      # - 8889:8889
    volumes:
      # - ./nginx/nginx.web.conf:/etc/nginx/nginx.conf:ro
      # - ./nginx/html:/usr/share/nginx/html:ro
      # - ./nginx/nginx.l7proxy.conf:/etc/nginx/nginx.conf:ro
      # - ./nginx/nginx.l4proxy.conf:/etc/nginx/nginx.conf:ro
      # - ./nginx/nginx.https.conf:/etc/nginx/nginx.conf:ro
      # - ./nginx/nginx.tcp.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/nginx.ws.conf:/etc/nginx/nginx.conf:ro
    networks:
      - default
      - backendnet
  # ng1:
  #   image: nginx:latest
  #   container_name: ng1
  #   hostname: ng1
  #   ports:
  #     - 8080:80
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
  #   networks:
  #     - backendnet
  #   depends_on:
  #     - nodeapp1
  #     - nodeapp2
  #     - nodeapp3
  # ng2:
  #   image: nginx:latest
  #   container_name: ng2
  #   hostname: ng2
  #   ports:
  #     - 8081:80
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
  #   networks:
  #     - backendnet
  #   depends_on:
  #     - nodeapp1
  #     - nodeapp2
  #     - nodeapp3
  # nodeapp1:
  #   image: nodeapp
  #   container_name: nodeapp1
  #   hostname: nodeapp1
  #   networks:
  #     - backendnet
  # nodeapp2:
  #   image: nodeapp
  #   container_name: nodeapp2
  #   hostname: nodeapp2
  #   networks:
  #     - backendnet
  # nodeapp3:
  #   image: nodeapp
  #   container_name: nodeapp3
  #   hostname: nodeapp3
  #   networks:
  #     - backendnet

networks:
  default:
  backendnet:
    driver: bridge
    driver_opts:
      dnsname: "on"

volumes:
  notused: